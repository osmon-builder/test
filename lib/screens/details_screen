import 'package:baguer/models/people.dart';
import 'package:flutter/material.dart';
import 'package:baguer/widgets/auth_backgroud.dart';

class DetailsScreen extends StatelessWidget {
  const DetailsScreen({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {

    final Result result = ModalRoute.of(context)!.settings.arguments as Result;

    return Scaffold(
     body: CustomScrollView(
      slivers: [
         _CustomAppBar(result: result),
        
        SliverList(
          delegate: SliverChildListDelegate([
              _PosterAndTitle(result: result),
             ]
          )
          )
      ],
     ),

    );
  }
}

class _CustomAppBar extends StatelessWidget {
  const _CustomAppBar({super.key, required this.result});

  final Result result;


  @override
  Widget build(BuildContext context) {
   

    return SliverAppBar(
      backgroundColor: Colors.indigo,
      expandedHeight: 200,
      floating: false,
      pinned: true,
      flexibleSpace: FlexibleSpaceBar(
        centerTitle: true,
        titlePadding: const EdgeInsets.all(0),
        title: Container(
          width: double.infinity,
          alignment: Alignment.bottomCenter,
          padding: const EdgeInsets.only(bottom: 10, left: 10, right: 10),
          color: Colors.black12,
          child:   Text(
            result.name.title +' ' + result.name.first,
            style: const TextStyle(fontSize: 16),
            textAlign: TextAlign.center,
            ),
        ),
        background:  FadeInImage(
          placeholder: const AssetImage('assets/no-image.jpg'),
          image: NetworkImage('${result.picture.large}'),
          fit: BoxFit.cover,
          ),
      ),
    );
  }
}

class _PosterAndTitle extends StatelessWidget {
  const _PosterAndTitle({super.key, required this.result});

  final Result result;


  @override
  Widget build(BuildContext context) {

    final textTheme = Theme.of(context).textTheme;
    final size = MediaQuery.of(context).size;
    return Container(
        margin: const EdgeInsets.only(top:20),
        padding:const EdgeInsets.symmetric(horizontal: 20),
      child:Row(
        children: [ 
          Hero(
            tag: result.id!,
            child: ClipRRect(
              borderRadius: BorderRadius.circular(20),
              child:  FadeInImage(
                placeholder:const AssetImage('assets/no-image.jpg'),
                image: NetworkImage('${result.picture.thumbnail}'),
                height: 100,
              ),
            ),
          ),
          const SizedBox( width: 20),

          ConstrainedBox(
            constraints: BoxConstraints(maxWidth: size.width - 200),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
               
                Text(result.name.first,
                 style: textTheme.headline2,
                 overflow: TextOverflow.ellipsis,
                 maxLines: 1,
                 ),
               Text(result.name.last,
                style: textTheme.headline3,
                overflow: TextOverflow.ellipsis,
                maxLines: 1,
               ),
                Text(result.login.username,
                style: textTheme.subtitle1,
                overflow: TextOverflow.ellipsis,
                maxLines: 2,
                ),
               Text(result.phone,
                style: textTheme.subtitle1,
                overflow: TextOverflow.ellipsis,
                maxLines: 2,
                ),
                Text(result.email,
                 style: textTheme.subtitle1,
                 overflow: TextOverflow.ellipsis,
                 maxLines: 2,
                  ),
                Text(result.location.country,
                 style: textTheme.subtitle1,
                 overflow: TextOverflow.ellipsis,
                 maxLines: 2,
                 ),
                   Text(result.location.city,
                 style: textTheme.subtitle1,
                 overflow: TextOverflow.ellipsis,
                 maxLines: 2,
                 ),
                   Text(result.location.state,
                 style: textTheme.subtitle1,
                 overflow: TextOverflow.ellipsis,
                 maxLines: 2,
                 ),
              ],
            ),
          ),       
        ]  
        ),
        
    );
  }
}



